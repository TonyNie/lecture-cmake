CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(Helloworld CXX C)

#test message command
MESSAGE(STATUS "Welcome to cmake")
#MESSAGE(SEND_ERROR "Not Find QtGui")
#MESSAGE(FATAL_ERROR "Not Find QtGui")

ADD_DEFINITIONS(-DENABLE_LOG)

#set command
SET(TARGET test)

SET(SRC main.cpp)

SET(TMPSTRING "hello")
SET(TMPSTRING ${TMPSTRING} "world")
MESSAGE(STATUS "tmpstring is " ${TMPSTRING})
SET(TMPSTRING)
#UNSET(TMPSTRING)
MESSAGE(STATUS "tmpstring is " ${TMPSTRING})

ADD_EXECUTABLE(${TARGET} ${SRC})



SET(TARGET_LIB compare)
SET(SRC_LIB intf.c)
ADD_LIBRARY(${TARGET_LIB} STATIC ${SRC_LIB})


ADD_SUBDIRECTORY(src bin)


FIND_FILE(HEADER_PATH stdlib.h)
MESSAGE(STATUS ${HEADER_PATH})

FIND_LIBRARY(LIBRARY_PATH NAMES tcl8.4 tcl8.5)
MESSAGE(STATUS ${LIBRARY_PATH})

FIND_PATH(PATH_PATH tclsh)
MESSAGE(STATUS ${PATH_PATH})

FIND_PROGRAM(PROGRAM_PATH tclsh)
MESSAGE(STATUS ${PROGRAM_PATH})

IF(UNIX)
MESSAGE(STATUS ${UNIX})
ELSEIF(APPLE)
MESSAGE(STATUS ${APPLE})
ENDIF(UNIX)

#FOREACH(VAR RANGE 10)
#MESSAGE(STATUS ${VAR})
#ENDFOREACH(VAR)

SET(CMAKE_BUILD_TYPE Debug)
MESSAGE(STATUS ${CMAKE_BUILD_TYPE})


# Variables That Describe the System
MESSAGE(STATUS "apple :" ${APPLE})
MESSAGE(STATUS "UNIX: " ${UNIX})
MESSAGE(STATUS "WIN32: " ${WIN32})
MESSAGE(STATUS ${CMAKE_HOST_SYSTEM})
MESSAGE(STATUS ${CMAKE_HOST_SYSTEM_NAME})
MESSAGE(STATUS ${CMAKE_HOST_SYSTEM_VERSION})
MESSAGE(STATUS ${CMAKE_HOST_SYSTEM_PROCESSOR})
MESSAGE(STATUS ${CMAKE_SYSTEM})
MESSAGE(STATUS ${CMAKE_SYSTEM_NAME})
MESSAGE(STATUS ${CMAKE_SYSTEM_VERSION})
MESSAGE(STATUS ${CMAKE_SYSTEM_PROCESSOR})


#Variables for Language
MESSAGE(STATUS "C++ compiler is:" ${CMAKE_CXX_COMPILER})
MESSAGE(STATUS "C compiler is:" ${CMAKE_C_COMPILER})
MESSAGE(STATUS "C++ archive append:" ${CMAKE_CXX_ARCHIVE_APPEND})
MESSAGE(STATUS "C++ archive create:" ${CMAKE_CXX_ARCHIVE_CREATE})
MESSAGE(STATUS "C++ debug flags:" ${CMAKE_CXX_FLAGS_DEBUG})
MESSAGE(STATUS "C++ release flags:" ${CMAKE_CXX_FLAGS_RELEASE})

#Variables that Provide Information
MESSAGE(STATUS "CMAKE_SOURCE_DIR:" ${CMAKE_SOURCE_DIR})
MESSAGE(STATUS "CMAKE_BINARY_DIR:" ${CMAKE_BINARY_DIR})
MESSAGE(STATUS "PROJECT_SOURCE_DIR:" ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS "PROJECT_BINARY_DIR:" ${PROJECT_BINARY_DIR})


SET(-0asdf test)
MESSAGE(STATUS ${-0asdf})

SET(STRLIST Hello word)
MESSAGE(STATUS ${STRLIST})
MESSAGE(STATUS ${STRLIsT})



ADD_CUSTOM_TARGET(CustomTart ALL
	COMMAND ${CMAKE_COMMAND} -E echo "USING ADD_CUSTOM_TARGET"
	COMMAND echo `date`
	DEPENDS CustomCmd)

#ADD_DEPENDENCIES(${TARGET} customtart)

ADD_CUSTOM_COMMAND(OUTPUT CustomCmd
	COMMAND ${CMAKE_COMMAND} -E echo "USING ADD_CUSTOM_COMMAND"
	COMMAND ${CMAKE_COMMAND} -E touch custom
	COMMAND echo `date`
	COMMAND echo `date` >> custom)

